//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntuitSampleMVC.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ibshr121414Entities : DbContext
    {
        public ibshr121414Entities()
            : base("name=ibshr121414Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tblAlterScript> tblAlterScripts { get; set; }
        public DbSet<tblEmpDocument> tblEmpDocuments { get; set; }
        public DbSet<tblEmpEvaluation> tblEmpEvaluations { get; set; }
        public DbSet<tblEmployeeTimeOff> tblEmployeeTimeOffs { get; set; }
        public DbSet<tblHoliday> tblHolidays { get; set; }
        public DbSet<tblInitialSpScript> tblInitialSpScripts { get; set; }
        public DbSet<tblInitialTblScript> tblInitialTblScripts { get; set; }
        public DbSet<tblOrganization> tblOrganizations { get; set; }
        public DbSet<tblOrgClientType> tblOrgClientTypes { get; set; }
        public DbSet<tblOrgCustomer> tblOrgCustomers { get; set; }
        public DbSet<tblOrgEmployeeProjDet> tblOrgEmployeeProjDets { get; set; }
        public DbSet<tblOrgEmployee> tblOrgEmployees { get; set; }
        public DbSet<tblOrgRole> tblOrgRoles { get; set; }
        public DbSet<tblOrgVendor> tblOrgVendors { get; set; }
        public DbSet<tblPageDetail> tblPageDetails { get; set; }
        public DbSet<tblProject> tblProjects { get; set; }
        public DbSet<tblRatingScale> tblRatingScales { get; set; }
        public DbSet<tblRatingScaleTitle> tblRatingScaleTitles { get; set; }
        public DbSet<tblRatingTemplate> tblRatingTemplates { get; set; }
        public DbSet<tblRatTemplQue> tblRatTemplQues { get; set; }
        public DbSet<tblReviewPeriod> tblReviewPeriods { get; set; }
        public DbSet<tblRolePermission> tblRolePermissions { get; set; }
        public DbSet<tblState> tblStates { get; set; }
        public DbSet<tblTask> tblTasks { get; set; }
        public DbSet<tblTasks1> tblTasks1 { get; set; }
        public DbSet<tblTimeOffType> tblTimeOffTypes { get; set; }
        public DbSet<tblTimeSheet> tblTimeSheets { get; set; }
        public DbSet<tblTimeSheets1> tblTimeSheets1 { get; set; }
        public DbSet<UserProfile> UserProfiles { get; set; }
        public DbSet<webpages_Membership> webpages_Membership { get; set; }
        public DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public DbSet<webpages_Roles> webpages_Roles { get; set; }
    
        public virtual ObjectResult<sp_AlterScripts_Result> sp_AlterScripts(string client_Name, string @case)
        {
            var client_NameParameter = client_Name != null ?
                new ObjectParameter("Client_Name", client_Name) :
                new ObjectParameter("Client_Name", typeof(string));
    
            var caseParameter = @case != null ?
                new ObjectParameter("Case", @case) :
                new ObjectParameter("Case", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AlterScripts_Result>("sp_AlterScripts", client_NameParameter, caseParameter);
        }
    
        public virtual int sp_ApproveTimeOff(Nullable<System.Guid> pK_EmpTimeOffID, string approved_Status)
        {
            var pK_EmpTimeOffIDParameter = pK_EmpTimeOffID.HasValue ?
                new ObjectParameter("PK_EmpTimeOffID", pK_EmpTimeOffID) :
                new ObjectParameter("PK_EmpTimeOffID", typeof(System.Guid));
    
            var approved_StatusParameter = approved_Status != null ?
                new ObjectParameter("Approved_Status", approved_Status) :
                new ObjectParameter("Approved_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ApproveTimeOff", pK_EmpTimeOffIDParameter, approved_StatusParameter);
        }
    
        public virtual int sp_ApproveTimesheets(Nullable<System.Guid> pK_TimeSheetID, string approved_Status)
        {
            var pK_TimeSheetIDParameter = pK_TimeSheetID.HasValue ?
                new ObjectParameter("PK_TimeSheetID", pK_TimeSheetID) :
                new ObjectParameter("PK_TimeSheetID", typeof(System.Guid));
    
            var approved_StatusParameter = approved_Status != null ?
                new ObjectParameter("Approved_Status", approved_Status) :
                new ObjectParameter("Approved_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ApproveTimesheets", pK_TimeSheetIDParameter, approved_StatusParameter);
        }
    
        public virtual ObjectResult<string> sp_ChangeForgotPassword(string emp_EmailID)
        {
            var emp_EmailIDParameter = emp_EmailID != null ?
                new ObjectParameter("Emp_EmailID", emp_EmailID) :
                new ObjectParameter("Emp_EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_ChangeForgotPassword", emp_EmailIDParameter);
        }
    
        public virtual ObjectResult<string> sp_CheckLogin(string emp_EmailID, string emp_LoginPwd)
        {
            var emp_EmailIDParameter = emp_EmailID != null ?
                new ObjectParameter("Emp_EmailID", emp_EmailID) :
                new ObjectParameter("Emp_EmailID", typeof(string));
    
            var emp_LoginPwdParameter = emp_LoginPwd != null ?
                new ObjectParameter("Emp_LoginPwd", emp_LoginPwd) :
                new ObjectParameter("Emp_LoginPwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CheckLogin", emp_EmailIDParameter, emp_LoginPwdParameter);
        }
    
        public virtual ObjectResult<string> sp_CheckVendorLogin(string vendor_Contact_EmailAddress, string vend_LoginPwd)
        {
            var vendor_Contact_EmailAddressParameter = vendor_Contact_EmailAddress != null ?
                new ObjectParameter("Vendor_Contact_EmailAddress", vendor_Contact_EmailAddress) :
                new ObjectParameter("Vendor_Contact_EmailAddress", typeof(string));
    
            var vend_LoginPwdParameter = vend_LoginPwd != null ?
                new ObjectParameter("Vend_LoginPwd", vend_LoginPwd) :
                new ObjectParameter("Vend_LoginPwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CheckVendorLogin", vendor_Contact_EmailAddressParameter, vend_LoginPwdParameter);
        }
    
        public virtual int sp_DelCliTypDetails(Nullable<System.Guid> pK_Org_ClientTypeID)
        {
            var pK_Org_ClientTypeIDParameter = pK_Org_ClientTypeID.HasValue ?
                new ObjectParameter("PK_Org_ClientTypeID", pK_Org_ClientTypeID) :
                new ObjectParameter("PK_Org_ClientTypeID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelCliTypDetails", pK_Org_ClientTypeIDParameter);
        }
    
        public virtual int sp_DelDocuments(Nullable<System.Guid> docID)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelDocuments", docIDParameter);
        }
    
        public virtual int sp_DelEmpDocuments(Nullable<System.Guid> docID)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelEmpDocuments", docIDParameter);
        }
    
        public virtual int sp_DelEmpEvaluation(Nullable<System.Guid> pK_EvaluationID, Nullable<System.Guid> fK_Org_EmpID)
        {
            var pK_EvaluationIDParameter = pK_EvaluationID.HasValue ?
                new ObjectParameter("PK_EvaluationID", pK_EvaluationID) :
                new ObjectParameter("PK_EvaluationID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelEmpEvaluation", pK_EvaluationIDParameter, fK_Org_EmpIDParameter);
        }
    
        public virtual int sp_DelEmployeeTimeOff(Nullable<System.Guid> pK_EmpTimeOffID)
        {
            var pK_EmpTimeOffIDParameter = pK_EmpTimeOffID.HasValue ?
                new ObjectParameter("PK_EmpTimeOffID", pK_EmpTimeOffID) :
                new ObjectParameter("PK_EmpTimeOffID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelEmployeeTimeOff", pK_EmpTimeOffIDParameter);
        }
    
        public virtual int sp_DelHolidays(Nullable<System.Guid> pK_HolidaysID)
        {
            var pK_HolidaysIDParameter = pK_HolidaysID.HasValue ?
                new ObjectParameter("PK_HolidaysID", pK_HolidaysID) :
                new ObjectParameter("PK_HolidaysID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelHolidays", pK_HolidaysIDParameter);
        }
    
        public virtual int sp_DelOrgCustomers(Nullable<System.Guid> pKCustID)
        {
            var pKCustIDParameter = pKCustID.HasValue ?
                new ObjectParameter("PKCustID", pKCustID) :
                new ObjectParameter("PKCustID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelOrgCustomers", pKCustIDParameter);
        }
    
        public virtual int sp_DelOrgEmployees(Nullable<System.Guid> pK_Org_EmpID)
        {
            var pK_Org_EmpIDParameter = pK_Org_EmpID.HasValue ?
                new ObjectParameter("PK_Org_EmpID", pK_Org_EmpID) :
                new ObjectParameter("PK_Org_EmpID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelOrgEmployees", pK_Org_EmpIDParameter);
        }
    
        public virtual int sp_DelOrgRoles(Nullable<System.Guid> pK_Org_RoleID)
        {
            var pK_Org_RoleIDParameter = pK_Org_RoleID.HasValue ?
                new ObjectParameter("PK_Org_RoleID", pK_Org_RoleID) :
                new ObjectParameter("PK_Org_RoleID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelOrgRoles", pK_Org_RoleIDParameter);
        }
    
        public virtual int sp_DelOrgVendors(Nullable<System.Guid> pKCustID)
        {
            var pKCustIDParameter = pKCustID.HasValue ?
                new ObjectParameter("PKCustID", pKCustID) :
                new ObjectParameter("PKCustID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelOrgVendors", pKCustIDParameter);
        }
    
        public virtual int sp_DelProjects(Nullable<System.Guid> pK_Org_ProjectID)
        {
            var pK_Org_ProjectIDParameter = pK_Org_ProjectID.HasValue ?
                new ObjectParameter("PK_Org_ProjectID", pK_Org_ProjectID) :
                new ObjectParameter("PK_Org_ProjectID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelProjects", pK_Org_ProjectIDParameter);
        }
    
        public virtual int sp_DelTasks(Nullable<System.Guid> fK_TimeSheetID, Nullable<System.Guid> fK_Org_EmpID)
        {
            var fK_TimeSheetIDParameter = fK_TimeSheetID.HasValue ?
                new ObjectParameter("FK_TimeSheetID", fK_TimeSheetID) :
                new ObjectParameter("FK_TimeSheetID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelTasks", fK_TimeSheetIDParameter, fK_Org_EmpIDParameter);
        }
    
        public virtual int sp_DelTimeOffType(Nullable<System.Guid> pK_TimeOffTypeID)
        {
            var pK_TimeOffTypeIDParameter = pK_TimeOffTypeID.HasValue ?
                new ObjectParameter("PK_TimeOffTypeID", pK_TimeOffTypeID) :
                new ObjectParameter("PK_TimeOffTypeID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DelTimeOffType", pK_TimeOffTypeIDParameter);
        }
    
        public virtual ObjectResult<sp_GetDocuments_Result> sp_GetDocuments(string doc_Type)
        {
            var doc_TypeParameter = doc_Type != null ?
                new ObjectParameter("Doc_Type", doc_Type) :
                new ObjectParameter("Doc_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDocuments_Result>("sp_GetDocuments", doc_TypeParameter);
        }
    
        public virtual ObjectResult<sp_GetEmail_Result> sp_GetEmail(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmail_Result>("sp_GetEmail", iDParameter);
        }
    
        public virtual ObjectResult<sp_GetEmpDocuments_Result> sp_GetEmpDocuments(Nullable<System.Guid> fK_Org_EmpID)
        {
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmpDocuments_Result>("sp_GetEmpDocuments", fK_Org_EmpIDParameter);
        }
    
        public virtual ObjectResult<sp_GetEmpEvaluation_Result> sp_GetEmpEvaluation(Nullable<System.Guid> pK_EvaluationID, Nullable<System.Guid> fK_Org_EmpID, Nullable<bool> only_Admin)
        {
            var pK_EvaluationIDParameter = pK_EvaluationID.HasValue ?
                new ObjectParameter("PK_EvaluationID", pK_EvaluationID) :
                new ObjectParameter("PK_EvaluationID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var only_AdminParameter = only_Admin.HasValue ?
                new ObjectParameter("Only_Admin", only_Admin) :
                new ObjectParameter("Only_Admin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmpEvaluation_Result>("sp_GetEmpEvaluation", pK_EvaluationIDParameter, fK_Org_EmpIDParameter, only_AdminParameter);
        }
    
        public virtual ObjectResult<sp_GetEmployeeTimeOff_Result> sp_GetEmployeeTimeOff(Nullable<System.Guid> pK_EmpTimeOffID, Nullable<System.Guid> fK_Org_EmpID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var pK_EmpTimeOffIDParameter = pK_EmpTimeOffID.HasValue ?
                new ObjectParameter("PK_EmpTimeOffID", pK_EmpTimeOffID) :
                new ObjectParameter("PK_EmpTimeOffID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmployeeTimeOff_Result>("sp_GetEmployeeTimeOff", pK_EmpTimeOffIDParameter, fK_Org_EmpIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_GetEvaluationID(Nullable<System.Guid> fK_Org_EmpID)
        {
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_GetEvaluationID", fK_Org_EmpIDParameter);
        }
    
        public virtual ObjectResult<sp_GetHolidays_Result> sp_GetHolidays(Nullable<System.Guid> pK_HolidaysID)
        {
            var pK_HolidaysIDParameter = pK_HolidaysID.HasValue ?
                new ObjectParameter("PK_HolidaysID", pK_HolidaysID) :
                new ObjectParameter("PK_HolidaysID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetHolidays_Result>("sp_GetHolidays", pK_HolidaysIDParameter);
        }
    
        public virtual ObjectResult<sp_GetOrgActiveEmpDetails_Result> sp_GetOrgActiveEmpDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrgActiveEmpDetails_Result>("sp_GetOrgActiveEmpDetails");
        }
    
        public virtual ObjectResult<sp_GetOrgCliTypDetails_Result> sp_GetOrgCliTypDetails(Nullable<System.Guid> pK_Org_ClientTypeID, Nullable<System.Guid> fK_OrgID)
        {
            var pK_Org_ClientTypeIDParameter = pK_Org_ClientTypeID.HasValue ?
                new ObjectParameter("PK_Org_ClientTypeID", pK_Org_ClientTypeID) :
                new ObjectParameter("PK_Org_ClientTypeID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrgCliTypDetails_Result>("sp_GetOrgCliTypDetails", pK_Org_ClientTypeIDParameter, fK_OrgIDParameter);
        }
    
        public virtual ObjectResult<sp_GetOrgCustDetails_Result> sp_GetOrgCustDetails(Nullable<System.Guid> pKCustID, Nullable<System.Guid> fK_OrgID)
        {
            var pKCustIDParameter = pKCustID.HasValue ?
                new ObjectParameter("PKCustID", pKCustID) :
                new ObjectParameter("PKCustID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrgCustDetails_Result>("sp_GetOrgCustDetails", pKCustIDParameter, fK_OrgIDParameter);
        }
    
        public virtual ObjectResult<sp_GetOrgDetails_Result> sp_GetOrgDetails(Nullable<System.Guid> pk_OrgID)
        {
            var pk_OrgIDParameter = pk_OrgID.HasValue ?
                new ObjectParameter("Pk_OrgID", pk_OrgID) :
                new ObjectParameter("Pk_OrgID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrgDetails_Result>("sp_GetOrgDetails", pk_OrgIDParameter);
        }
    
        public virtual ObjectResult<sp_GetOrgEmpDetails_Result> sp_GetOrgEmpDetails(Nullable<System.Guid> pK_Org_EmpID, Nullable<System.Guid> fK_OrgID)
        {
            var pK_Org_EmpIDParameter = pK_Org_EmpID.HasValue ?
                new ObjectParameter("PK_Org_EmpID", pK_Org_EmpID) :
                new ObjectParameter("PK_Org_EmpID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrgEmpDetails_Result>("sp_GetOrgEmpDetails", pK_Org_EmpIDParameter, fK_OrgIDParameter);
        }
    
        public virtual ObjectResult<sp_GetOrgRoles_Result> sp_GetOrgRoles(Nullable<System.Guid> pK_Org_RoleID, Nullable<System.Guid> fK_OrgID)
        {
            var pK_Org_RoleIDParameter = pK_Org_RoleID.HasValue ?
                new ObjectParameter("PK_Org_RoleID", pK_Org_RoleID) :
                new ObjectParameter("PK_Org_RoleID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrgRoles_Result>("sp_GetOrgRoles", pK_Org_RoleIDParameter, fK_OrgIDParameter);
        }
    
        public virtual ObjectResult<sp_GetOrgVendors_Result> sp_GetOrgVendors(Nullable<System.Guid> pKCustID, Nullable<System.Guid> fK_OrgID)
        {
            var pKCustIDParameter = pKCustID.HasValue ?
                new ObjectParameter("PKCustID", pKCustID) :
                new ObjectParameter("PKCustID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrgVendors_Result>("sp_GetOrgVendors", pKCustIDParameter, fK_OrgIDParameter);
        }
    
        public virtual ObjectResult<sp_GetPageDetails_Result> sp_GetPageDetails(Nullable<System.Guid> pk_PageID)
        {
            var pk_PageIDParameter = pk_PageID.HasValue ?
                new ObjectParameter("Pk_PageID", pk_PageID) :
                new ObjectParameter("Pk_PageID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPageDetails_Result>("sp_GetPageDetails", pk_PageIDParameter);
        }
    
        public virtual ObjectResult<sp_GetProjects_Result> sp_GetProjects(Nullable<System.Guid> pK_Org_ProjectID, Nullable<System.Guid> fK_Org_EmpID)
        {
            var pK_Org_ProjectIDParameter = pK_Org_ProjectID.HasValue ?
                new ObjectParameter("PK_Org_ProjectID", pK_Org_ProjectID) :
                new ObjectParameter("PK_Org_ProjectID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProjects_Result>("sp_GetProjects", pK_Org_ProjectIDParameter, fK_Org_EmpIDParameter);
        }
    
        public virtual ObjectResult<sp_GetRatingScale_Result> sp_GetRatingScale(Nullable<System.Guid> pK_RatingScaleID)
        {
            var pK_RatingScaleIDParameter = pK_RatingScaleID.HasValue ?
                new ObjectParameter("PK_RatingScaleID", pK_RatingScaleID) :
                new ObjectParameter("PK_RatingScaleID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRatingScale_Result>("sp_GetRatingScale", pK_RatingScaleIDParameter);
        }
    
        public virtual ObjectResult<sp_GetRatingScaleTitle_Result> sp_GetRatingScaleTitle(Nullable<System.Guid> pK_RatingScaleTitleID, Nullable<System.Guid> fK_RatingScaleID)
        {
            var pK_RatingScaleTitleIDParameter = pK_RatingScaleTitleID.HasValue ?
                new ObjectParameter("PK_RatingScaleTitleID", pK_RatingScaleTitleID) :
                new ObjectParameter("PK_RatingScaleTitleID", typeof(System.Guid));
    
            var fK_RatingScaleIDParameter = fK_RatingScaleID.HasValue ?
                new ObjectParameter("FK_RatingScaleID", fK_RatingScaleID) :
                new ObjectParameter("FK_RatingScaleID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRatingScaleTitle_Result>("sp_GetRatingScaleTitle", pK_RatingScaleTitleIDParameter, fK_RatingScaleIDParameter);
        }
    
        public virtual ObjectResult<sp_GetRatingTemplate_Result> sp_GetRatingTemplate(Nullable<System.Guid> pK_TemplateID)
        {
            var pK_TemplateIDParameter = pK_TemplateID.HasValue ?
                new ObjectParameter("PK_TemplateID", pK_TemplateID) :
                new ObjectParameter("PK_TemplateID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRatingTemplate_Result>("sp_GetRatingTemplate", pK_TemplateIDParameter);
        }
    
        public virtual ObjectResult<sp_GetRatTemplQues_Result> sp_GetRatTemplQues(Nullable<System.Guid> pK_QuesID, Nullable<System.Guid> fK_TemplateID)
        {
            var pK_QuesIDParameter = pK_QuesID.HasValue ?
                new ObjectParameter("PK_QuesID", pK_QuesID) :
                new ObjectParameter("PK_QuesID", typeof(System.Guid));
    
            var fK_TemplateIDParameter = fK_TemplateID.HasValue ?
                new ObjectParameter("FK_TemplateID", fK_TemplateID) :
                new ObjectParameter("FK_TemplateID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRatTemplQues_Result>("sp_GetRatTemplQues", pK_QuesIDParameter, fK_TemplateIDParameter);
        }
    
        public virtual ObjectResult<sp_GetReviewPeriod_Result> sp_GetReviewPeriod(Nullable<System.Guid> pK_ReviewPeriodID)
        {
            var pK_ReviewPeriodIDParameter = pK_ReviewPeriodID.HasValue ?
                new ObjectParameter("PK_ReviewPeriodID", pK_ReviewPeriodID) :
                new ObjectParameter("PK_ReviewPeriodID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReviewPeriod_Result>("sp_GetReviewPeriod", pK_ReviewPeriodIDParameter);
        }
    
        public virtual int sp_GetRolePermissions(Nullable<System.Guid> pk_RolePermission_ID)
        {
            var pk_RolePermission_IDParameter = pk_RolePermission_ID.HasValue ?
                new ObjectParameter("Pk_RolePermission_ID", pk_RolePermission_ID) :
                new ObjectParameter("Pk_RolePermission_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetRolePermissions", pk_RolePermission_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetState_Result> sp_GetState()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetState_Result>("sp_GetState");
        }
    
        public virtual ObjectResult<sp_GetTasks_Result> sp_GetTasks(Nullable<System.Guid> pK_TaskID, Nullable<System.Guid> fK_Org_EmpID, Nullable<System.Guid> fK_TimeSheetID)
        {
            var pK_TaskIDParameter = pK_TaskID.HasValue ?
                new ObjectParameter("PK_TaskID", pK_TaskID) :
                new ObjectParameter("PK_TaskID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var fK_TimeSheetIDParameter = fK_TimeSheetID.HasValue ?
                new ObjectParameter("FK_TimeSheetID", fK_TimeSheetID) :
                new ObjectParameter("FK_TimeSheetID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTasks_Result>("sp_GetTasks", pK_TaskIDParameter, fK_Org_EmpIDParameter, fK_TimeSheetIDParameter);
        }
    
        public virtual ObjectResult<sp_GetTimeOffType_Result> sp_GetTimeOffType(Nullable<System.Guid> pK_TimeOffTypeID)
        {
            var pK_TimeOffTypeIDParameter = pK_TimeOffTypeID.HasValue ?
                new ObjectParameter("PK_TimeOffTypeID", pK_TimeOffTypeID) :
                new ObjectParameter("PK_TimeOffTypeID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTimeOffType_Result>("sp_GetTimeOffType", pK_TimeOffTypeIDParameter);
        }
    
        public virtual ObjectResult<sp_GetTimeSheetDetails_Result> sp_GetTimeSheetDetails(Nullable<System.Guid> pK_Org_EmpID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var pK_Org_EmpIDParameter = pK_Org_EmpID.HasValue ?
                new ObjectParameter("PK_Org_EmpID", pK_Org_EmpID) :
                new ObjectParameter("PK_Org_EmpID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTimeSheetDetails_Result>("sp_GetTimeSheetDetails", pK_Org_EmpIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_GetUserDetail_Result> sp_GetUserDetail(string emp_Code)
        {
            var emp_CodeParameter = emp_Code != null ?
                new ObjectParameter("Emp_Code", emp_Code) :
                new ObjectParameter("Emp_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserDetail_Result>("sp_GetUserDetail", emp_CodeParameter);
        }
    
        public virtual ObjectResult<sp_GetVendInsCertificate_Result> sp_GetVendInsCertificate(Nullable<System.Guid> insID, Nullable<System.Guid> fKCustID)
        {
            var insIDParameter = insID.HasValue ?
                new ObjectParameter("InsID", insID) :
                new ObjectParameter("InsID", typeof(System.Guid));
    
            var fKCustIDParameter = fKCustID.HasValue ?
                new ObjectParameter("FKCustID", fKCustID) :
                new ObjectParameter("FKCustID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetVendInsCertificate_Result>("sp_GetVendInsCertificate", insIDParameter, fKCustIDParameter);
        }
    
        public virtual ObjectResult<sp_GetVendInvoice_Result> sp_GetVendInvoice(Nullable<System.Guid> invoiceID, Nullable<System.Guid> fKCustID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(System.Guid));
    
            var fKCustIDParameter = fKCustID.HasValue ?
                new ObjectParameter("FKCustID", fKCustID) :
                new ObjectParameter("FKCustID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetVendInvoice_Result>("sp_GetVendInvoice", invoiceIDParameter, fKCustIDParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtDocuments(Nullable<System.Guid> docID, string doc_Title, string doc_Path, string doc_Type)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(System.Guid));
    
            var doc_TitleParameter = doc_Title != null ?
                new ObjectParameter("Doc_Title", doc_Title) :
                new ObjectParameter("Doc_Title", typeof(string));
    
            var doc_PathParameter = doc_Path != null ?
                new ObjectParameter("Doc_Path", doc_Path) :
                new ObjectParameter("Doc_Path", typeof(string));
    
            var doc_TypeParameter = doc_Type != null ?
                new ObjectParameter("Doc_Type", doc_Type) :
                new ObjectParameter("Doc_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtDocuments", docIDParameter, doc_TitleParameter, doc_PathParameter, doc_TypeParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtEmail(Nullable<System.Guid> iD, string from_Email, string password, string to_Emails, string @case, string smtp_Host, Nullable<int> smtp_Port)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var from_EmailParameter = from_Email != null ?
                new ObjectParameter("From_Email", from_Email) :
                new ObjectParameter("From_Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var to_EmailsParameter = to_Emails != null ?
                new ObjectParameter("To_Emails", to_Emails) :
                new ObjectParameter("To_Emails", typeof(string));
    
            var caseParameter = @case != null ?
                new ObjectParameter("case", @case) :
                new ObjectParameter("case", typeof(string));
    
            var smtp_HostParameter = smtp_Host != null ?
                new ObjectParameter("Smtp_Host", smtp_Host) :
                new ObjectParameter("Smtp_Host", typeof(string));
    
            var smtp_PortParameter = smtp_Port.HasValue ?
                new ObjectParameter("Smtp_Port", smtp_Port) :
                new ObjectParameter("Smtp_Port", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtEmail", iDParameter, from_EmailParameter, passwordParameter, to_EmailsParameter, caseParameter, smtp_HostParameter, smtp_PortParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtEmpDocuments(Nullable<System.Guid> docID, Nullable<System.Guid> fK_Org_EmpID, string doc_Title, string doc_Path)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var doc_TitleParameter = doc_Title != null ?
                new ObjectParameter("Doc_Title", doc_Title) :
                new ObjectParameter("Doc_Title", typeof(string));
    
            var doc_PathParameter = doc_Path != null ?
                new ObjectParameter("Doc_Path", doc_Path) :
                new ObjectParameter("Doc_Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtEmpDocuments", docIDParameter, fK_Org_EmpIDParameter, doc_TitleParameter, doc_PathParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtEmpEvaluation(Nullable<System.Guid> pK_EvaluationID, Nullable<System.Guid> fK_Org_EmpID, Nullable<System.Guid> fK_TemplateID, string eval_Doc_Path, Nullable<int> processed, string employer_Eval, string employee_Eval, Nullable<bool> only_Admin, string eval_Grade, string superv_Comments, Nullable<System.DateTime> emp_Signed_Date, Nullable<System.DateTime> supervisor_Signed_Date, string summary1, string summary2, Nullable<bool> activeFlag, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate)
        {
            var pK_EvaluationIDParameter = pK_EvaluationID.HasValue ?
                new ObjectParameter("PK_EvaluationID", pK_EvaluationID) :
                new ObjectParameter("PK_EvaluationID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var fK_TemplateIDParameter = fK_TemplateID.HasValue ?
                new ObjectParameter("FK_TemplateID", fK_TemplateID) :
                new ObjectParameter("FK_TemplateID", typeof(System.Guid));
    
            var eval_Doc_PathParameter = eval_Doc_Path != null ?
                new ObjectParameter("Eval_Doc_Path", eval_Doc_Path) :
                new ObjectParameter("Eval_Doc_Path", typeof(string));
    
            var processedParameter = processed.HasValue ?
                new ObjectParameter("Processed", processed) :
                new ObjectParameter("Processed", typeof(int));
    
            var employer_EvalParameter = employer_Eval != null ?
                new ObjectParameter("Employer_Eval", employer_Eval) :
                new ObjectParameter("Employer_Eval", typeof(string));
    
            var employee_EvalParameter = employee_Eval != null ?
                new ObjectParameter("Employee_Eval", employee_Eval) :
                new ObjectParameter("Employee_Eval", typeof(string));
    
            var only_AdminParameter = only_Admin.HasValue ?
                new ObjectParameter("Only_Admin", only_Admin) :
                new ObjectParameter("Only_Admin", typeof(bool));
    
            var eval_GradeParameter = eval_Grade != null ?
                new ObjectParameter("Eval_Grade", eval_Grade) :
                new ObjectParameter("Eval_Grade", typeof(string));
    
            var superv_CommentsParameter = superv_Comments != null ?
                new ObjectParameter("Superv_Comments", superv_Comments) :
                new ObjectParameter("Superv_Comments", typeof(string));
    
            var emp_Signed_DateParameter = emp_Signed_Date.HasValue ?
                new ObjectParameter("Emp_Signed_Date", emp_Signed_Date) :
                new ObjectParameter("Emp_Signed_Date", typeof(System.DateTime));
    
            var supervisor_Signed_DateParameter = supervisor_Signed_Date.HasValue ?
                new ObjectParameter("Supervisor_Signed_Date", supervisor_Signed_Date) :
                new ObjectParameter("Supervisor_Signed_Date", typeof(System.DateTime));
    
            var summary1Parameter = summary1 != null ?
                new ObjectParameter("Summary1", summary1) :
                new ObjectParameter("Summary1", typeof(string));
    
            var summary2Parameter = summary2 != null ?
                new ObjectParameter("Summary2", summary2) :
                new ObjectParameter("Summary2", typeof(string));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtEmpEvaluation", pK_EvaluationIDParameter, fK_Org_EmpIDParameter, fK_TemplateIDParameter, eval_Doc_PathParameter, processedParameter, employer_EvalParameter, employee_EvalParameter, only_AdminParameter, eval_GradeParameter, superv_CommentsParameter, emp_Signed_DateParameter, supervisor_Signed_DateParameter, summary1Parameter, summary2Parameter, activeFlagParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtEmployeeTimeOff(Nullable<System.Guid> pK_EmpTimeOffID, Nullable<System.Guid> fK_Org_EmpID, Nullable<System.Guid> fK_TimeOffTypeID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string fileName, string filePath, string approved_Status, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, string comments)
        {
            var pK_EmpTimeOffIDParameter = pK_EmpTimeOffID.HasValue ?
                new ObjectParameter("PK_EmpTimeOffID", pK_EmpTimeOffID) :
                new ObjectParameter("PK_EmpTimeOffID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var fK_TimeOffTypeIDParameter = fK_TimeOffTypeID.HasValue ?
                new ObjectParameter("FK_TimeOffTypeID", fK_TimeOffTypeID) :
                new ObjectParameter("FK_TimeOffTypeID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var approved_StatusParameter = approved_Status != null ?
                new ObjectParameter("Approved_Status", approved_Status) :
                new ObjectParameter("Approved_Status", typeof(string));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtEmployeeTimeOff", pK_EmpTimeOffIDParameter, fK_Org_EmpIDParameter, fK_TimeOffTypeIDParameter, startDateParameter, endDateParameter, fileNameParameter, filePathParameter, approved_StatusParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, commentsParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtHolidays(Nullable<System.Guid> pK_HolidaysID, string holidays_Name, string holidays_Description, Nullable<System.DateTime> holidays_Date, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag)
        {
            var pK_HolidaysIDParameter = pK_HolidaysID.HasValue ?
                new ObjectParameter("PK_HolidaysID", pK_HolidaysID) :
                new ObjectParameter("PK_HolidaysID", typeof(System.Guid));
    
            var holidays_NameParameter = holidays_Name != null ?
                new ObjectParameter("Holidays_Name", holidays_Name) :
                new ObjectParameter("Holidays_Name", typeof(string));
    
            var holidays_DescriptionParameter = holidays_Description != null ?
                new ObjectParameter("Holidays_Description", holidays_Description) :
                new ObjectParameter("Holidays_Description", typeof(string));
    
            var holidays_DateParameter = holidays_Date.HasValue ?
                new ObjectParameter("Holidays_Date", holidays_Date) :
                new ObjectParameter("Holidays_Date", typeof(System.DateTime));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtHolidays", pK_HolidaysIDParameter, holidays_NameParameter, holidays_DescriptionParameter, holidays_DateParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtOrganization(Nullable<System.Guid> pk_OrgID, string org_Name, string org_Address1, string org_Address2, string org_City, string org_State, string org_PostalCode, string org_Phone_, string org_EmailID, string org_Fax, string org_Website_URL, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate)
        {
            var pk_OrgIDParameter = pk_OrgID.HasValue ?
                new ObjectParameter("Pk_OrgID", pk_OrgID) :
                new ObjectParameter("Pk_OrgID", typeof(System.Guid));
    
            var org_NameParameter = org_Name != null ?
                new ObjectParameter("Org_Name", org_Name) :
                new ObjectParameter("Org_Name", typeof(string));
    
            var org_Address1Parameter = org_Address1 != null ?
                new ObjectParameter("Org_Address1", org_Address1) :
                new ObjectParameter("Org_Address1", typeof(string));
    
            var org_Address2Parameter = org_Address2 != null ?
                new ObjectParameter("Org_Address2", org_Address2) :
                new ObjectParameter("Org_Address2", typeof(string));
    
            var org_CityParameter = org_City != null ?
                new ObjectParameter("Org_City", org_City) :
                new ObjectParameter("Org_City", typeof(string));
    
            var org_StateParameter = org_State != null ?
                new ObjectParameter("Org_State", org_State) :
                new ObjectParameter("Org_State", typeof(string));
    
            var org_PostalCodeParameter = org_PostalCode != null ?
                new ObjectParameter("Org_PostalCode", org_PostalCode) :
                new ObjectParameter("Org_PostalCode", typeof(string));
    
            var org_Phone_Parameter = org_Phone_ != null ?
                new ObjectParameter("Org_Phone_", org_Phone_) :
                new ObjectParameter("Org_Phone_", typeof(string));
    
            var org_EmailIDParameter = org_EmailID != null ?
                new ObjectParameter("Org_EmailID", org_EmailID) :
                new ObjectParameter("Org_EmailID", typeof(string));
    
            var org_FaxParameter = org_Fax != null ?
                new ObjectParameter("Org_Fax", org_Fax) :
                new ObjectParameter("Org_Fax", typeof(string));
    
            var org_Website_URLParameter = org_Website_URL != null ?
                new ObjectParameter("Org_Website_URL", org_Website_URL) :
                new ObjectParameter("Org_Website_URL", typeof(string));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtOrganization", pk_OrgIDParameter, org_NameParameter, org_Address1Parameter, org_Address2Parameter, org_CityParameter, org_StateParameter, org_PostalCodeParameter, org_Phone_Parameter, org_EmailIDParameter, org_FaxParameter, org_Website_URLParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtOrgClientType(Nullable<System.Guid> pK_Org_ClientTypeID, Nullable<System.Guid> fK_OrgID, string org_ClientType, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag)
        {
            var pK_Org_ClientTypeIDParameter = pK_Org_ClientTypeID.HasValue ?
                new ObjectParameter("PK_Org_ClientTypeID", pK_Org_ClientTypeID) :
                new ObjectParameter("PK_Org_ClientTypeID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            var org_ClientTypeParameter = org_ClientType != null ?
                new ObjectParameter("Org_ClientType", org_ClientType) :
                new ObjectParameter("Org_ClientType", typeof(string));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtOrgClientType", pK_Org_ClientTypeIDParameter, fK_OrgIDParameter, org_ClientTypeParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtOrgCustomers(Nullable<System.Guid> pKCustID, Nullable<System.Guid> fK_OrgID, string cust_Name, string cust_WebSiteURL, string cust_Phone, string cust_fax, string cust_Contact_Name, string cust_Contact_EmailAddress, string cust_Contact_Phone, string cust_AltContact_Name, string cust_AltContact_EmailAddress, string cust_AltContact_Phone, string cust_ShipTo_Address1, string cust_ShipTo_Address2, string cust_ShipTo_City, string cust_ShipTo_State, string cust_ShipTo_PostalCode, string cust_BillTo_Address1, string cust_BillTo_Address2, string cust_BillTo_City, string cust_BillTo_State, string cust_BillTo_PostalCode, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag)
        {
            var pKCustIDParameter = pKCustID.HasValue ?
                new ObjectParameter("PKCustID", pKCustID) :
                new ObjectParameter("PKCustID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            var cust_NameParameter = cust_Name != null ?
                new ObjectParameter("Cust_Name", cust_Name) :
                new ObjectParameter("Cust_Name", typeof(string));
    
            var cust_WebSiteURLParameter = cust_WebSiteURL != null ?
                new ObjectParameter("Cust_WebSiteURL", cust_WebSiteURL) :
                new ObjectParameter("Cust_WebSiteURL", typeof(string));
    
            var cust_PhoneParameter = cust_Phone != null ?
                new ObjectParameter("Cust_Phone", cust_Phone) :
                new ObjectParameter("Cust_Phone", typeof(string));
    
            var cust_faxParameter = cust_fax != null ?
                new ObjectParameter("Cust_fax", cust_fax) :
                new ObjectParameter("Cust_fax", typeof(string));
    
            var cust_Contact_NameParameter = cust_Contact_Name != null ?
                new ObjectParameter("Cust_Contact_Name", cust_Contact_Name) :
                new ObjectParameter("Cust_Contact_Name", typeof(string));
    
            var cust_Contact_EmailAddressParameter = cust_Contact_EmailAddress != null ?
                new ObjectParameter("Cust_Contact_EmailAddress", cust_Contact_EmailAddress) :
                new ObjectParameter("Cust_Contact_EmailAddress", typeof(string));
    
            var cust_Contact_PhoneParameter = cust_Contact_Phone != null ?
                new ObjectParameter("Cust_Contact_Phone", cust_Contact_Phone) :
                new ObjectParameter("Cust_Contact_Phone", typeof(string));
    
            var cust_AltContact_NameParameter = cust_AltContact_Name != null ?
                new ObjectParameter("Cust_AltContact_Name", cust_AltContact_Name) :
                new ObjectParameter("Cust_AltContact_Name", typeof(string));
    
            var cust_AltContact_EmailAddressParameter = cust_AltContact_EmailAddress != null ?
                new ObjectParameter("Cust_AltContact_EmailAddress", cust_AltContact_EmailAddress) :
                new ObjectParameter("Cust_AltContact_EmailAddress", typeof(string));
    
            var cust_AltContact_PhoneParameter = cust_AltContact_Phone != null ?
                new ObjectParameter("Cust_AltContact_Phone", cust_AltContact_Phone) :
                new ObjectParameter("Cust_AltContact_Phone", typeof(string));
    
            var cust_ShipTo_Address1Parameter = cust_ShipTo_Address1 != null ?
                new ObjectParameter("Cust_ShipTo_Address1", cust_ShipTo_Address1) :
                new ObjectParameter("Cust_ShipTo_Address1", typeof(string));
    
            var cust_ShipTo_Address2Parameter = cust_ShipTo_Address2 != null ?
                new ObjectParameter("Cust_ShipTo_Address2", cust_ShipTo_Address2) :
                new ObjectParameter("Cust_ShipTo_Address2", typeof(string));
    
            var cust_ShipTo_CityParameter = cust_ShipTo_City != null ?
                new ObjectParameter("Cust_ShipTo_City", cust_ShipTo_City) :
                new ObjectParameter("Cust_ShipTo_City", typeof(string));
    
            var cust_ShipTo_StateParameter = cust_ShipTo_State != null ?
                new ObjectParameter("Cust_ShipTo_State", cust_ShipTo_State) :
                new ObjectParameter("Cust_ShipTo_State", typeof(string));
    
            var cust_ShipTo_PostalCodeParameter = cust_ShipTo_PostalCode != null ?
                new ObjectParameter("Cust_ShipTo_PostalCode", cust_ShipTo_PostalCode) :
                new ObjectParameter("Cust_ShipTo_PostalCode", typeof(string));
    
            var cust_BillTo_Address1Parameter = cust_BillTo_Address1 != null ?
                new ObjectParameter("Cust_BillTo_Address1", cust_BillTo_Address1) :
                new ObjectParameter("Cust_BillTo_Address1", typeof(string));
    
            var cust_BillTo_Address2Parameter = cust_BillTo_Address2 != null ?
                new ObjectParameter("Cust_BillTo_Address2", cust_BillTo_Address2) :
                new ObjectParameter("Cust_BillTo_Address2", typeof(string));
    
            var cust_BillTo_CityParameter = cust_BillTo_City != null ?
                new ObjectParameter("Cust_BillTo_City", cust_BillTo_City) :
                new ObjectParameter("Cust_BillTo_City", typeof(string));
    
            var cust_BillTo_StateParameter = cust_BillTo_State != null ?
                new ObjectParameter("Cust_BillTo_State", cust_BillTo_State) :
                new ObjectParameter("Cust_BillTo_State", typeof(string));
    
            var cust_BillTo_PostalCodeParameter = cust_BillTo_PostalCode != null ?
                new ObjectParameter("Cust_BillTo_PostalCode", cust_BillTo_PostalCode) :
                new ObjectParameter("Cust_BillTo_PostalCode", typeof(string));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtOrgCustomers", pKCustIDParameter, fK_OrgIDParameter, cust_NameParameter, cust_WebSiteURLParameter, cust_PhoneParameter, cust_faxParameter, cust_Contact_NameParameter, cust_Contact_EmailAddressParameter, cust_Contact_PhoneParameter, cust_AltContact_NameParameter, cust_AltContact_EmailAddressParameter, cust_AltContact_PhoneParameter, cust_ShipTo_Address1Parameter, cust_ShipTo_Address2Parameter, cust_ShipTo_CityParameter, cust_ShipTo_StateParameter, cust_ShipTo_PostalCodeParameter, cust_BillTo_Address1Parameter, cust_BillTo_Address2Parameter, cust_BillTo_CityParameter, cust_BillTo_StateParameter, cust_BillTo_PostalCodeParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtOrgEmployees(Nullable<System.Guid> pK_Org_EmpID, string emp_Code, Nullable<System.Guid> fK_OrgID, string emp_Fname, string emp_MName, string emp_Lname, string emp_Prefix, string emp_CellPhone, string emp_HomePhone, string emp_BusinessPhone, string emp_EmailID, string emp_AlternateEmail, string emp_JobTitle, string emp_LoginPwd, Nullable<System.DateTime> emp_HireDate, Nullable<System.DateTime> emp_TerminationDate, string emp_Home_Address1, string emp_Home_Address2, string emp_Home_City, string emp_Home_State, string emp_Home_PostalCode, string emp_Bus_Address1, string emp_Bus_Address2, string emp_Bus_City, string emp_Bus_State, string emp_Bus_PostalCode, Nullable<System.Guid> fK_Org_Roles, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag, string emp_Categ, Nullable<decimal> emp_Salary, string doc_Number, Nullable<System.DateTime> doc_ExpDate, string lCA_Number, Nullable<System.DateTime> lCA_ExpDate, string perm_CertNumber, string i140_Number, string i485_Number)
        {
            var pK_Org_EmpIDParameter = pK_Org_EmpID.HasValue ?
                new ObjectParameter("PK_Org_EmpID", pK_Org_EmpID) :
                new ObjectParameter("PK_Org_EmpID", typeof(System.Guid));
    
            var emp_CodeParameter = emp_Code != null ?
                new ObjectParameter("Emp_Code", emp_Code) :
                new ObjectParameter("Emp_Code", typeof(string));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            var emp_FnameParameter = emp_Fname != null ?
                new ObjectParameter("Emp_Fname", emp_Fname) :
                new ObjectParameter("Emp_Fname", typeof(string));
    
            var emp_MNameParameter = emp_MName != null ?
                new ObjectParameter("Emp_MName", emp_MName) :
                new ObjectParameter("Emp_MName", typeof(string));
    
            var emp_LnameParameter = emp_Lname != null ?
                new ObjectParameter("Emp_Lname", emp_Lname) :
                new ObjectParameter("Emp_Lname", typeof(string));
    
            var emp_PrefixParameter = emp_Prefix != null ?
                new ObjectParameter("Emp_Prefix", emp_Prefix) :
                new ObjectParameter("Emp_Prefix", typeof(string));
    
            var emp_CellPhoneParameter = emp_CellPhone != null ?
                new ObjectParameter("Emp_CellPhone", emp_CellPhone) :
                new ObjectParameter("Emp_CellPhone", typeof(string));
    
            var emp_HomePhoneParameter = emp_HomePhone != null ?
                new ObjectParameter("Emp_HomePhone", emp_HomePhone) :
                new ObjectParameter("Emp_HomePhone", typeof(string));
    
            var emp_BusinessPhoneParameter = emp_BusinessPhone != null ?
                new ObjectParameter("Emp_BusinessPhone", emp_BusinessPhone) :
                new ObjectParameter("Emp_BusinessPhone", typeof(string));
    
            var emp_EmailIDParameter = emp_EmailID != null ?
                new ObjectParameter("Emp_EmailID", emp_EmailID) :
                new ObjectParameter("Emp_EmailID", typeof(string));
    
            var emp_AlternateEmailParameter = emp_AlternateEmail != null ?
                new ObjectParameter("Emp_AlternateEmail", emp_AlternateEmail) :
                new ObjectParameter("Emp_AlternateEmail", typeof(string));
    
            var emp_JobTitleParameter = emp_JobTitle != null ?
                new ObjectParameter("Emp_JobTitle", emp_JobTitle) :
                new ObjectParameter("Emp_JobTitle", typeof(string));
    
            var emp_LoginPwdParameter = emp_LoginPwd != null ?
                new ObjectParameter("Emp_LoginPwd", emp_LoginPwd) :
                new ObjectParameter("Emp_LoginPwd", typeof(string));
    
            var emp_HireDateParameter = emp_HireDate.HasValue ?
                new ObjectParameter("Emp_HireDate", emp_HireDate) :
                new ObjectParameter("Emp_HireDate", typeof(System.DateTime));
    
            var emp_TerminationDateParameter = emp_TerminationDate.HasValue ?
                new ObjectParameter("Emp_TerminationDate", emp_TerminationDate) :
                new ObjectParameter("Emp_TerminationDate", typeof(System.DateTime));
    
            var emp_Home_Address1Parameter = emp_Home_Address1 != null ?
                new ObjectParameter("Emp_Home_Address1", emp_Home_Address1) :
                new ObjectParameter("Emp_Home_Address1", typeof(string));
    
            var emp_Home_Address2Parameter = emp_Home_Address2 != null ?
                new ObjectParameter("Emp_Home_Address2", emp_Home_Address2) :
                new ObjectParameter("Emp_Home_Address2", typeof(string));
    
            var emp_Home_CityParameter = emp_Home_City != null ?
                new ObjectParameter("Emp_Home_City", emp_Home_City) :
                new ObjectParameter("Emp_Home_City", typeof(string));
    
            var emp_Home_StateParameter = emp_Home_State != null ?
                new ObjectParameter("Emp_Home_State", emp_Home_State) :
                new ObjectParameter("Emp_Home_State", typeof(string));
    
            var emp_Home_PostalCodeParameter = emp_Home_PostalCode != null ?
                new ObjectParameter("Emp_Home_PostalCode", emp_Home_PostalCode) :
                new ObjectParameter("Emp_Home_PostalCode", typeof(string));
    
            var emp_Bus_Address1Parameter = emp_Bus_Address1 != null ?
                new ObjectParameter("Emp_Bus_Address1", emp_Bus_Address1) :
                new ObjectParameter("Emp_Bus_Address1", typeof(string));
    
            var emp_Bus_Address2Parameter = emp_Bus_Address2 != null ?
                new ObjectParameter("Emp_Bus_Address2", emp_Bus_Address2) :
                new ObjectParameter("Emp_Bus_Address2", typeof(string));
    
            var emp_Bus_CityParameter = emp_Bus_City != null ?
                new ObjectParameter("Emp_Bus_City", emp_Bus_City) :
                new ObjectParameter("Emp_Bus_City", typeof(string));
    
            var emp_Bus_StateParameter = emp_Bus_State != null ?
                new ObjectParameter("Emp_Bus_State", emp_Bus_State) :
                new ObjectParameter("Emp_Bus_State", typeof(string));
    
            var emp_Bus_PostalCodeParameter = emp_Bus_PostalCode != null ?
                new ObjectParameter("Emp_Bus_PostalCode", emp_Bus_PostalCode) :
                new ObjectParameter("Emp_Bus_PostalCode", typeof(string));
    
            var fK_Org_RolesParameter = fK_Org_Roles.HasValue ?
                new ObjectParameter("FK_Org_Roles", fK_Org_Roles) :
                new ObjectParameter("FK_Org_Roles", typeof(System.Guid));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var emp_CategParameter = emp_Categ != null ?
                new ObjectParameter("Emp_Categ", emp_Categ) :
                new ObjectParameter("Emp_Categ", typeof(string));
    
            var emp_SalaryParameter = emp_Salary.HasValue ?
                new ObjectParameter("Emp_Salary", emp_Salary) :
                new ObjectParameter("Emp_Salary", typeof(decimal));
    
            var doc_NumberParameter = doc_Number != null ?
                new ObjectParameter("Doc_Number", doc_Number) :
                new ObjectParameter("Doc_Number", typeof(string));
    
            var doc_ExpDateParameter = doc_ExpDate.HasValue ?
                new ObjectParameter("Doc_ExpDate", doc_ExpDate) :
                new ObjectParameter("Doc_ExpDate", typeof(System.DateTime));
    
            var lCA_NumberParameter = lCA_Number != null ?
                new ObjectParameter("LCA_Number", lCA_Number) :
                new ObjectParameter("LCA_Number", typeof(string));
    
            var lCA_ExpDateParameter = lCA_ExpDate.HasValue ?
                new ObjectParameter("LCA_ExpDate", lCA_ExpDate) :
                new ObjectParameter("LCA_ExpDate", typeof(System.DateTime));
    
            var perm_CertNumberParameter = perm_CertNumber != null ?
                new ObjectParameter("Perm_CertNumber", perm_CertNumber) :
                new ObjectParameter("Perm_CertNumber", typeof(string));
    
            var i140_NumberParameter = i140_Number != null ?
                new ObjectParameter("I140_Number", i140_Number) :
                new ObjectParameter("I140_Number", typeof(string));
    
            var i485_NumberParameter = i485_Number != null ?
                new ObjectParameter("I485_Number", i485_Number) :
                new ObjectParameter("I485_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtOrgEmployees", pK_Org_EmpIDParameter, emp_CodeParameter, fK_OrgIDParameter, emp_FnameParameter, emp_MNameParameter, emp_LnameParameter, emp_PrefixParameter, emp_CellPhoneParameter, emp_HomePhoneParameter, emp_BusinessPhoneParameter, emp_EmailIDParameter, emp_AlternateEmailParameter, emp_JobTitleParameter, emp_LoginPwdParameter, emp_HireDateParameter, emp_TerminationDateParameter, emp_Home_Address1Parameter, emp_Home_Address2Parameter, emp_Home_CityParameter, emp_Home_StateParameter, emp_Home_PostalCodeParameter, emp_Bus_Address1Parameter, emp_Bus_Address2Parameter, emp_Bus_CityParameter, emp_Bus_StateParameter, emp_Bus_PostalCodeParameter, fK_Org_RolesParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter, emp_CategParameter, emp_SalaryParameter, doc_NumberParameter, doc_ExpDateParameter, lCA_NumberParameter, lCA_ExpDateParameter, perm_CertNumberParameter, i140_NumberParameter, i485_NumberParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtOrgRoles(Nullable<System.Guid> pK_Org_RoleID, Nullable<System.Guid> fK_OrgID, string org_Role_Name, string org_Role_Description, Nullable<bool> activeFlag)
        {
            var pK_Org_RoleIDParameter = pK_Org_RoleID.HasValue ?
                new ObjectParameter("PK_Org_RoleID", pK_Org_RoleID) :
                new ObjectParameter("PK_Org_RoleID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            var org_Role_NameParameter = org_Role_Name != null ?
                new ObjectParameter("Org_Role_Name", org_Role_Name) :
                new ObjectParameter("Org_Role_Name", typeof(string));
    
            var org_Role_DescriptionParameter = org_Role_Description != null ?
                new ObjectParameter("Org_Role_Description", org_Role_Description) :
                new ObjectParameter("Org_Role_Description", typeof(string));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtOrgRoles", pK_Org_RoleIDParameter, fK_OrgIDParameter, org_Role_NameParameter, org_Role_DescriptionParameter, activeFlagParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtOrgVendors(Nullable<System.Guid> pKCustID, Nullable<System.Guid> fK_OrgID, string vendor_Name, string vendor_WebSiteURL, string vendor_Phone, string vendor_fax, string vendor_Contact_Name, string vendor_Contact_EmailAddress, string vendor_Contact_Phone, string vendor_AltContact_Name, string vendor_AltContact_EmailAddress, string vendor_AltContact_Phone, string vendor_ShipTo_Address1, string vendor_ShipTo_Address2, string vendor_ShipTo_City, string vendor_ShipTo_State, string vendor_ShipTo_PostalCode, string vendor_BillTo_Address1, string vendor_BillTo_Address2, string vendor_BillTo_City, string vendor_BillTo_State, string vendor_BillTo_PostalCode, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag, string vend_LoginPwd)
        {
            var pKCustIDParameter = pKCustID.HasValue ?
                new ObjectParameter("PKCustID", pKCustID) :
                new ObjectParameter("PKCustID", typeof(System.Guid));
    
            var fK_OrgIDParameter = fK_OrgID.HasValue ?
                new ObjectParameter("FK_OrgID", fK_OrgID) :
                new ObjectParameter("FK_OrgID", typeof(System.Guid));
    
            var vendor_NameParameter = vendor_Name != null ?
                new ObjectParameter("Vendor_Name", vendor_Name) :
                new ObjectParameter("Vendor_Name", typeof(string));
    
            var vendor_WebSiteURLParameter = vendor_WebSiteURL != null ?
                new ObjectParameter("Vendor_WebSiteURL", vendor_WebSiteURL) :
                new ObjectParameter("Vendor_WebSiteURL", typeof(string));
    
            var vendor_PhoneParameter = vendor_Phone != null ?
                new ObjectParameter("Vendor_Phone", vendor_Phone) :
                new ObjectParameter("Vendor_Phone", typeof(string));
    
            var vendor_faxParameter = vendor_fax != null ?
                new ObjectParameter("Vendor_fax", vendor_fax) :
                new ObjectParameter("Vendor_fax", typeof(string));
    
            var vendor_Contact_NameParameter = vendor_Contact_Name != null ?
                new ObjectParameter("Vendor_Contact_Name", vendor_Contact_Name) :
                new ObjectParameter("Vendor_Contact_Name", typeof(string));
    
            var vendor_Contact_EmailAddressParameter = vendor_Contact_EmailAddress != null ?
                new ObjectParameter("Vendor_Contact_EmailAddress", vendor_Contact_EmailAddress) :
                new ObjectParameter("Vendor_Contact_EmailAddress", typeof(string));
    
            var vendor_Contact_PhoneParameter = vendor_Contact_Phone != null ?
                new ObjectParameter("Vendor_Contact_Phone", vendor_Contact_Phone) :
                new ObjectParameter("Vendor_Contact_Phone", typeof(string));
    
            var vendor_AltContact_NameParameter = vendor_AltContact_Name != null ?
                new ObjectParameter("Vendor_AltContact_Name", vendor_AltContact_Name) :
                new ObjectParameter("Vendor_AltContact_Name", typeof(string));
    
            var vendor_AltContact_EmailAddressParameter = vendor_AltContact_EmailAddress != null ?
                new ObjectParameter("Vendor_AltContact_EmailAddress", vendor_AltContact_EmailAddress) :
                new ObjectParameter("Vendor_AltContact_EmailAddress", typeof(string));
    
            var vendor_AltContact_PhoneParameter = vendor_AltContact_Phone != null ?
                new ObjectParameter("Vendor_AltContact_Phone", vendor_AltContact_Phone) :
                new ObjectParameter("Vendor_AltContact_Phone", typeof(string));
    
            var vendor_ShipTo_Address1Parameter = vendor_ShipTo_Address1 != null ?
                new ObjectParameter("Vendor_ShipTo_Address1", vendor_ShipTo_Address1) :
                new ObjectParameter("Vendor_ShipTo_Address1", typeof(string));
    
            var vendor_ShipTo_Address2Parameter = vendor_ShipTo_Address2 != null ?
                new ObjectParameter("Vendor_ShipTo_Address2", vendor_ShipTo_Address2) :
                new ObjectParameter("Vendor_ShipTo_Address2", typeof(string));
    
            var vendor_ShipTo_CityParameter = vendor_ShipTo_City != null ?
                new ObjectParameter("Vendor_ShipTo_City", vendor_ShipTo_City) :
                new ObjectParameter("Vendor_ShipTo_City", typeof(string));
    
            var vendor_ShipTo_StateParameter = vendor_ShipTo_State != null ?
                new ObjectParameter("Vendor_ShipTo_State", vendor_ShipTo_State) :
                new ObjectParameter("Vendor_ShipTo_State", typeof(string));
    
            var vendor_ShipTo_PostalCodeParameter = vendor_ShipTo_PostalCode != null ?
                new ObjectParameter("Vendor_ShipTo_PostalCode", vendor_ShipTo_PostalCode) :
                new ObjectParameter("Vendor_ShipTo_PostalCode", typeof(string));
    
            var vendor_BillTo_Address1Parameter = vendor_BillTo_Address1 != null ?
                new ObjectParameter("Vendor_BillTo_Address1", vendor_BillTo_Address1) :
                new ObjectParameter("Vendor_BillTo_Address1", typeof(string));
    
            var vendor_BillTo_Address2Parameter = vendor_BillTo_Address2 != null ?
                new ObjectParameter("Vendor_BillTo_Address2", vendor_BillTo_Address2) :
                new ObjectParameter("Vendor_BillTo_Address2", typeof(string));
    
            var vendor_BillTo_CityParameter = vendor_BillTo_City != null ?
                new ObjectParameter("Vendor_BillTo_City", vendor_BillTo_City) :
                new ObjectParameter("Vendor_BillTo_City", typeof(string));
    
            var vendor_BillTo_StateParameter = vendor_BillTo_State != null ?
                new ObjectParameter("Vendor_BillTo_State", vendor_BillTo_State) :
                new ObjectParameter("Vendor_BillTo_State", typeof(string));
    
            var vendor_BillTo_PostalCodeParameter = vendor_BillTo_PostalCode != null ?
                new ObjectParameter("Vendor_BillTo_PostalCode", vendor_BillTo_PostalCode) :
                new ObjectParameter("Vendor_BillTo_PostalCode", typeof(string));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var vend_LoginPwdParameter = vend_LoginPwd != null ?
                new ObjectParameter("Vend_LoginPwd", vend_LoginPwd) :
                new ObjectParameter("Vend_LoginPwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtOrgVendors", pKCustIDParameter, fK_OrgIDParameter, vendor_NameParameter, vendor_WebSiteURLParameter, vendor_PhoneParameter, vendor_faxParameter, vendor_Contact_NameParameter, vendor_Contact_EmailAddressParameter, vendor_Contact_PhoneParameter, vendor_AltContact_NameParameter, vendor_AltContact_EmailAddressParameter, vendor_AltContact_PhoneParameter, vendor_ShipTo_Address1Parameter, vendor_ShipTo_Address2Parameter, vendor_ShipTo_CityParameter, vendor_ShipTo_StateParameter, vendor_ShipTo_PostalCodeParameter, vendor_BillTo_Address1Parameter, vendor_BillTo_Address2Parameter, vendor_BillTo_CityParameter, vendor_BillTo_StateParameter, vendor_BillTo_PostalCodeParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter, vend_LoginPwdParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtProjects(Nullable<System.Guid> pK_Org_ProjectID, Nullable<System.Guid> fK_Org_EmpID, string proj_Code, string proj_name, string proj_Description, Nullable<System.DateTime> proj_StartDate, Nullable<System.DateTime> proj_EndDate, Nullable<System.Guid> fK_Client1, Nullable<System.Guid> fK_Client2, Nullable<System.Guid> fK_EndClient, Nullable<decimal> billRate, Nullable<int> billingCycle, Nullable<bool> overTime_Allowed, Nullable<decimal> overTime_Rate, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag, string terms, string emailTo, string emailCCTo)
        {
            var pK_Org_ProjectIDParameter = pK_Org_ProjectID.HasValue ?
                new ObjectParameter("PK_Org_ProjectID", pK_Org_ProjectID) :
                new ObjectParameter("PK_Org_ProjectID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var proj_CodeParameter = proj_Code != null ?
                new ObjectParameter("Proj_Code", proj_Code) :
                new ObjectParameter("Proj_Code", typeof(string));
    
            var proj_nameParameter = proj_name != null ?
                new ObjectParameter("Proj_name", proj_name) :
                new ObjectParameter("Proj_name", typeof(string));
    
            var proj_DescriptionParameter = proj_Description != null ?
                new ObjectParameter("Proj_Description", proj_Description) :
                new ObjectParameter("Proj_Description", typeof(string));
    
            var proj_StartDateParameter = proj_StartDate.HasValue ?
                new ObjectParameter("Proj_StartDate", proj_StartDate) :
                new ObjectParameter("Proj_StartDate", typeof(System.DateTime));
    
            var proj_EndDateParameter = proj_EndDate.HasValue ?
                new ObjectParameter("Proj_EndDate", proj_EndDate) :
                new ObjectParameter("Proj_EndDate", typeof(System.DateTime));
    
            var fK_Client1Parameter = fK_Client1.HasValue ?
                new ObjectParameter("FK_Client1", fK_Client1) :
                new ObjectParameter("FK_Client1", typeof(System.Guid));
    
            var fK_Client2Parameter = fK_Client2.HasValue ?
                new ObjectParameter("FK_Client2", fK_Client2) :
                new ObjectParameter("FK_Client2", typeof(System.Guid));
    
            var fK_EndClientParameter = fK_EndClient.HasValue ?
                new ObjectParameter("FK_EndClient", fK_EndClient) :
                new ObjectParameter("FK_EndClient", typeof(System.Guid));
    
            var billRateParameter = billRate.HasValue ?
                new ObjectParameter("BillRate", billRate) :
                new ObjectParameter("BillRate", typeof(decimal));
    
            var billingCycleParameter = billingCycle.HasValue ?
                new ObjectParameter("BillingCycle", billingCycle) :
                new ObjectParameter("BillingCycle", typeof(int));
    
            var overTime_AllowedParameter = overTime_Allowed.HasValue ?
                new ObjectParameter("OverTime_Allowed", overTime_Allowed) :
                new ObjectParameter("OverTime_Allowed", typeof(bool));
    
            var overTime_RateParameter = overTime_Rate.HasValue ?
                new ObjectParameter("OverTime_Rate", overTime_Rate) :
                new ObjectParameter("OverTime_Rate", typeof(decimal));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("EmailTo", emailTo) :
                new ObjectParameter("EmailTo", typeof(string));
    
            var emailCCToParameter = emailCCTo != null ?
                new ObjectParameter("EmailCCTo", emailCCTo) :
                new ObjectParameter("EmailCCTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtProjects", pK_Org_ProjectIDParameter, fK_Org_EmpIDParameter, proj_CodeParameter, proj_nameParameter, proj_DescriptionParameter, proj_StartDateParameter, proj_EndDateParameter, fK_Client1Parameter, fK_Client2Parameter, fK_EndClientParameter, billRateParameter, billingCycleParameter, overTime_AllowedParameter, overTime_RateParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter, termsParameter, emailToParameter, emailCCToParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtRatingScale(Nullable<System.Guid> pK_RatingScaleID, string rating_Scale, Nullable<bool> single_Selection, Nullable<bool> activeFlag, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate)
        {
            var pK_RatingScaleIDParameter = pK_RatingScaleID.HasValue ?
                new ObjectParameter("PK_RatingScaleID", pK_RatingScaleID) :
                new ObjectParameter("PK_RatingScaleID", typeof(System.Guid));
    
            var rating_ScaleParameter = rating_Scale != null ?
                new ObjectParameter("Rating_Scale", rating_Scale) :
                new ObjectParameter("Rating_Scale", typeof(string));
    
            var single_SelectionParameter = single_Selection.HasValue ?
                new ObjectParameter("Single_Selection", single_Selection) :
                new ObjectParameter("Single_Selection", typeof(bool));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtRatingScale", pK_RatingScaleIDParameter, rating_ScaleParameter, single_SelectionParameter, activeFlagParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtRatingScaleTitle(Nullable<System.Guid> pK_RatingScaleTitleID, Nullable<System.Guid> fK_RatingScaleID, string title, string description, Nullable<int> rating_Order, Nullable<bool> activeFlag, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate)
        {
            var pK_RatingScaleTitleIDParameter = pK_RatingScaleTitleID.HasValue ?
                new ObjectParameter("PK_RatingScaleTitleID", pK_RatingScaleTitleID) :
                new ObjectParameter("PK_RatingScaleTitleID", typeof(System.Guid));
    
            var fK_RatingScaleIDParameter = fK_RatingScaleID.HasValue ?
                new ObjectParameter("FK_RatingScaleID", fK_RatingScaleID) :
                new ObjectParameter("FK_RatingScaleID", typeof(System.Guid));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var rating_OrderParameter = rating_Order.HasValue ?
                new ObjectParameter("Rating_Order", rating_Order) :
                new ObjectParameter("Rating_Order", typeof(int));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtRatingScaleTitle", pK_RatingScaleTitleIDParameter, fK_RatingScaleIDParameter, titleParameter, descriptionParameter, rating_OrderParameter, activeFlagParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtRatingTemplate(Nullable<System.Guid> pK_TemplateID, string template_Name, Nullable<System.Guid> fK_RatingScaleID, Nullable<System.Guid> fK_ReviewPeriodID, string instructions, Nullable<bool> activeFlag, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, string summary_Title1, string summary_Title2)
        {
            var pK_TemplateIDParameter = pK_TemplateID.HasValue ?
                new ObjectParameter("PK_TemplateID", pK_TemplateID) :
                new ObjectParameter("PK_TemplateID", typeof(System.Guid));
    
            var template_NameParameter = template_Name != null ?
                new ObjectParameter("Template_Name", template_Name) :
                new ObjectParameter("Template_Name", typeof(string));
    
            var fK_RatingScaleIDParameter = fK_RatingScaleID.HasValue ?
                new ObjectParameter("FK_RatingScaleID", fK_RatingScaleID) :
                new ObjectParameter("FK_RatingScaleID", typeof(System.Guid));
    
            var fK_ReviewPeriodIDParameter = fK_ReviewPeriodID.HasValue ?
                new ObjectParameter("FK_ReviewPeriodID", fK_ReviewPeriodID) :
                new ObjectParameter("FK_ReviewPeriodID", typeof(System.Guid));
    
            var instructionsParameter = instructions != null ?
                new ObjectParameter("Instructions", instructions) :
                new ObjectParameter("Instructions", typeof(string));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var summary_Title1Parameter = summary_Title1 != null ?
                new ObjectParameter("Summary_Title1", summary_Title1) :
                new ObjectParameter("Summary_Title1", typeof(string));
    
            var summary_Title2Parameter = summary_Title2 != null ?
                new ObjectParameter("Summary_Title2", summary_Title2) :
                new ObjectParameter("Summary_Title2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtRatingTemplate", pK_TemplateIDParameter, template_NameParameter, fK_RatingScaleIDParameter, fK_ReviewPeriodIDParameter, instructionsParameter, activeFlagParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, summary_Title1Parameter, summary_Title2Parameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtRatTemplQues(Nullable<System.Guid> pK_QuesID, Nullable<System.Guid> fK_TemplateID, string questions, Nullable<bool> activeFlag, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate)
        {
            var pK_QuesIDParameter = pK_QuesID.HasValue ?
                new ObjectParameter("PK_QuesID", pK_QuesID) :
                new ObjectParameter("PK_QuesID", typeof(System.Guid));
    
            var fK_TemplateIDParameter = fK_TemplateID.HasValue ?
                new ObjectParameter("FK_TemplateID", fK_TemplateID) :
                new ObjectParameter("FK_TemplateID", typeof(System.Guid));
    
            var questionsParameter = questions != null ?
                new ObjectParameter("Questions", questions) :
                new ObjectParameter("Questions", typeof(string));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtRatTemplQues", pK_QuesIDParameter, fK_TemplateIDParameter, questionsParameter, activeFlagParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtReviewPeriod(Nullable<System.Guid> pK_ReviewPeriodID, string period_Name, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, Nullable<bool> activeFlag, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate)
        {
            var pK_ReviewPeriodIDParameter = pK_ReviewPeriodID.HasValue ?
                new ObjectParameter("PK_ReviewPeriodID", pK_ReviewPeriodID) :
                new ObjectParameter("PK_ReviewPeriodID", typeof(System.Guid));
    
            var period_NameParameter = period_Name != null ?
                new ObjectParameter("Period_Name", period_Name) :
                new ObjectParameter("Period_Name", typeof(string));
    
            var start_DateParameter = start_Date.HasValue ?
                new ObjectParameter("Start_Date", start_Date) :
                new ObjectParameter("Start_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtReviewPeriod", pK_ReviewPeriodIDParameter, period_NameParameter, start_DateParameter, end_DateParameter, activeFlagParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtRolePermissions(Nullable<System.Guid> pK_RolePermission_ID, Nullable<System.Guid> fk_PageID, string permissionType, Nullable<System.Guid> fK_Org_RoleID, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag)
        {
            var pK_RolePermission_IDParameter = pK_RolePermission_ID.HasValue ?
                new ObjectParameter("PK_RolePermission_ID", pK_RolePermission_ID) :
                new ObjectParameter("PK_RolePermission_ID", typeof(System.Guid));
    
            var fk_PageIDParameter = fk_PageID.HasValue ?
                new ObjectParameter("Fk_PageID", fk_PageID) :
                new ObjectParameter("Fk_PageID", typeof(System.Guid));
    
            var permissionTypeParameter = permissionType != null ?
                new ObjectParameter("PermissionType", permissionType) :
                new ObjectParameter("PermissionType", typeof(string));
    
            var fK_Org_RoleIDParameter = fK_Org_RoleID.HasValue ?
                new ObjectParameter("FK_Org_RoleID", fK_Org_RoleID) :
                new ObjectParameter("FK_Org_RoleID", typeof(System.Guid));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtRolePermissions", pK_RolePermission_IDParameter, fk_PageIDParameter, permissionTypeParameter, fK_Org_RoleIDParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtTasks(Nullable<System.Guid> pK_TaskID, Nullable<System.Guid> fK_Org_EmpID, Nullable<System.Guid> fK_TimeSheetID, Nullable<int> task_Number, Nullable<System.DateTime> task_Date, string task_Name, string task_Description, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate)
        {
            var pK_TaskIDParameter = pK_TaskID.HasValue ?
                new ObjectParameter("PK_TaskID", pK_TaskID) :
                new ObjectParameter("PK_TaskID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var fK_TimeSheetIDParameter = fK_TimeSheetID.HasValue ?
                new ObjectParameter("FK_TimeSheetID", fK_TimeSheetID) :
                new ObjectParameter("FK_TimeSheetID", typeof(System.Guid));
    
            var task_NumberParameter = task_Number.HasValue ?
                new ObjectParameter("Task_Number", task_Number) :
                new ObjectParameter("Task_Number", typeof(int));
    
            var task_DateParameter = task_Date.HasValue ?
                new ObjectParameter("Task_Date", task_Date) :
                new ObjectParameter("Task_Date", typeof(System.DateTime));
    
            var task_NameParameter = task_Name != null ?
                new ObjectParameter("Task_Name", task_Name) :
                new ObjectParameter("Task_Name", typeof(string));
    
            var task_DescriptionParameter = task_Description != null ?
                new ObjectParameter("Task_Description", task_Description) :
                new ObjectParameter("Task_Description", typeof(string));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtTasks", pK_TaskIDParameter, fK_Org_EmpIDParameter, fK_TimeSheetIDParameter, task_NumberParameter, task_DateParameter, task_NameParameter, task_DescriptionParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdttblTimeSheet(Nullable<System.Guid> pK_TimeSheetID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> mon, Nullable<decimal> tue, Nullable<decimal> wed, Nullable<decimal> thu, Nullable<decimal> fri, Nullable<decimal> sat, Nullable<decimal> sun, Nullable<decimal> total, string tSFileName, string tSFilePath, Nullable<System.Guid> fK_Org_EmpID, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeflag, Nullable<byte> tSStatus)
        {
            var pK_TimeSheetIDParameter = pK_TimeSheetID.HasValue ?
                new ObjectParameter("PK_TimeSheetID", pK_TimeSheetID) :
                new ObjectParameter("PK_TimeSheetID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var monParameter = mon.HasValue ?
                new ObjectParameter("Mon", mon) :
                new ObjectParameter("Mon", typeof(decimal));
    
            var tueParameter = tue.HasValue ?
                new ObjectParameter("Tue", tue) :
                new ObjectParameter("Tue", typeof(decimal));
    
            var wedParameter = wed.HasValue ?
                new ObjectParameter("Wed", wed) :
                new ObjectParameter("Wed", typeof(decimal));
    
            var thuParameter = thu.HasValue ?
                new ObjectParameter("Thu", thu) :
                new ObjectParameter("Thu", typeof(decimal));
    
            var friParameter = fri.HasValue ?
                new ObjectParameter("Fri", fri) :
                new ObjectParameter("Fri", typeof(decimal));
    
            var satParameter = sat.HasValue ?
                new ObjectParameter("Sat", sat) :
                new ObjectParameter("Sat", typeof(decimal));
    
            var sunParameter = sun.HasValue ?
                new ObjectParameter("Sun", sun) :
                new ObjectParameter("Sun", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var tSFileNameParameter = tSFileName != null ?
                new ObjectParameter("TSFileName", tSFileName) :
                new ObjectParameter("TSFileName", typeof(string));
    
            var tSFilePathParameter = tSFilePath != null ?
                new ObjectParameter("TSFilePath", tSFilePath) :
                new ObjectParameter("TSFilePath", typeof(string));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeflagParameter = activeflag.HasValue ?
                new ObjectParameter("Activeflag", activeflag) :
                new ObjectParameter("Activeflag", typeof(bool));
    
            var tSStatusParameter = tSStatus.HasValue ?
                new ObjectParameter("TSStatus", tSStatus) :
                new ObjectParameter("TSStatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdttblTimeSheet", pK_TimeSheetIDParameter, startDateParameter, endDateParameter, monParameter, tueParameter, wedParameter, thuParameter, friParameter, satParameter, sunParameter, totalParameter, tSFileNameParameter, tSFilePathParameter, fK_Org_EmpIDParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeflagParameter, tSStatusParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtTimeOffType(Nullable<System.Guid> pK_TimeOffTypeID, string timeOffDescription, string rec_CreatedBy, Nullable<System.DateTime> rec_CreatedDate, string rec_ModifiedBy, Nullable<System.DateTime> rec_ModifiedDate, Nullable<bool> activeFlag)
        {
            var pK_TimeOffTypeIDParameter = pK_TimeOffTypeID.HasValue ?
                new ObjectParameter("PK_TimeOffTypeID", pK_TimeOffTypeID) :
                new ObjectParameter("PK_TimeOffTypeID", typeof(System.Guid));
    
            var timeOffDescriptionParameter = timeOffDescription != null ?
                new ObjectParameter("TimeOffDescription", timeOffDescription) :
                new ObjectParameter("TimeOffDescription", typeof(string));
    
            var rec_CreatedByParameter = rec_CreatedBy != null ?
                new ObjectParameter("Rec_CreatedBy", rec_CreatedBy) :
                new ObjectParameter("Rec_CreatedBy", typeof(string));
    
            var rec_CreatedDateParameter = rec_CreatedDate.HasValue ?
                new ObjectParameter("Rec_CreatedDate", rec_CreatedDate) :
                new ObjectParameter("Rec_CreatedDate", typeof(System.DateTime));
    
            var rec_ModifiedByParameter = rec_ModifiedBy != null ?
                new ObjectParameter("Rec_ModifiedBy", rec_ModifiedBy) :
                new ObjectParameter("Rec_ModifiedBy", typeof(string));
    
            var rec_ModifiedDateParameter = rec_ModifiedDate.HasValue ?
                new ObjectParameter("Rec_ModifiedDate", rec_ModifiedDate) :
                new ObjectParameter("Rec_ModifiedDate", typeof(System.DateTime));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtTimeOffType", pK_TimeOffTypeIDParameter, timeOffDescriptionParameter, rec_CreatedByParameter, rec_CreatedDateParameter, rec_ModifiedByParameter, rec_ModifiedDateParameter, activeFlagParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtVendInsCertificate(Nullable<System.Guid> insID, Nullable<System.Guid> fKCustID, Nullable<System.DateTime> effect_End_Date, string certif_path)
        {
            var insIDParameter = insID.HasValue ?
                new ObjectParameter("InsID", insID) :
                new ObjectParameter("InsID", typeof(System.Guid));
    
            var fKCustIDParameter = fKCustID.HasValue ?
                new ObjectParameter("FKCustID", fKCustID) :
                new ObjectParameter("FKCustID", typeof(System.Guid));
    
            var effect_End_DateParameter = effect_End_Date.HasValue ?
                new ObjectParameter("Effect_End_Date", effect_End_Date) :
                new ObjectParameter("Effect_End_Date", typeof(System.DateTime));
    
            var certif_pathParameter = certif_path != null ?
                new ObjectParameter("Certif_path", certif_path) :
                new ObjectParameter("Certif_path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtVendInsCertificate", insIDParameter, fKCustIDParameter, effect_End_DateParameter, certif_pathParameter);
        }
    
        public virtual ObjectResult<string> sp_InsOrUpdtVendInvoice(Nullable<System.Guid> invoiceID, Nullable<System.Guid> fKCustID, Nullable<decimal> invoice_Amnt, string consult_Name, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, string invoice_path)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(System.Guid));
    
            var fKCustIDParameter = fKCustID.HasValue ?
                new ObjectParameter("FKCustID", fKCustID) :
                new ObjectParameter("FKCustID", typeof(System.Guid));
    
            var invoice_AmntParameter = invoice_Amnt.HasValue ?
                new ObjectParameter("Invoice_Amnt", invoice_Amnt) :
                new ObjectParameter("Invoice_Amnt", typeof(decimal));
    
            var consult_NameParameter = consult_Name != null ?
                new ObjectParameter("Consult_Name", consult_Name) :
                new ObjectParameter("Consult_Name", typeof(string));
    
            var start_DateParameter = start_Date.HasValue ?
                new ObjectParameter("Start_Date", start_Date) :
                new ObjectParameter("Start_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            var invoice_pathParameter = invoice_path != null ?
                new ObjectParameter("Invoice_path", invoice_path) :
                new ObjectParameter("Invoice_path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_InsOrUpdtVendInvoice", invoiceIDParameter, fKCustIDParameter, invoice_AmntParameter, consult_NameParameter, start_DateParameter, end_DateParameter, invoice_pathParameter);
        }
    
        public virtual ObjectResult<sp_MissingTimesheet_Result> sp_MissingTimesheet(Nullable<System.Guid> fK_Org_EmpID, Nullable<System.DateTime> startdate, Nullable<System.DateTime> endDate)
        {
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("Startdate", startdate) :
                new ObjectParameter("Startdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MissingTimesheet_Result>("sp_MissingTimesheet", fK_Org_EmpIDParameter, startdateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_ScriptSP_Result> sp_ScriptSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ScriptSP_Result>("sp_ScriptSP");
        }
    
        public virtual ObjectResult<sp_ScriptTable_Result> sp_ScriptTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ScriptTable_Result>("sp_ScriptTable");
        }
    
        public virtual ObjectResult<sp_SearchOrgEmpDetails_Result> sp_SearchOrgEmpDetails(string emp_Fname, string emp_Lname, string emp_CellPhone, string emp_HomePhone, string emp_BusinessPhone, string emp_EmailID, Nullable<int> activeFlag)
        {
            var emp_FnameParameter = emp_Fname != null ?
                new ObjectParameter("Emp_Fname", emp_Fname) :
                new ObjectParameter("Emp_Fname", typeof(string));
    
            var emp_LnameParameter = emp_Lname != null ?
                new ObjectParameter("Emp_Lname", emp_Lname) :
                new ObjectParameter("Emp_Lname", typeof(string));
    
            var emp_CellPhoneParameter = emp_CellPhone != null ?
                new ObjectParameter("Emp_CellPhone", emp_CellPhone) :
                new ObjectParameter("Emp_CellPhone", typeof(string));
    
            var emp_HomePhoneParameter = emp_HomePhone != null ?
                new ObjectParameter("Emp_HomePhone", emp_HomePhone) :
                new ObjectParameter("Emp_HomePhone", typeof(string));
    
            var emp_BusinessPhoneParameter = emp_BusinessPhone != null ?
                new ObjectParameter("Emp_BusinessPhone", emp_BusinessPhone) :
                new ObjectParameter("Emp_BusinessPhone", typeof(string));
    
            var emp_EmailIDParameter = emp_EmailID != null ?
                new ObjectParameter("Emp_EmailID", emp_EmailID) :
                new ObjectParameter("Emp_EmailID", typeof(string));
    
            var activeFlagParameter = activeFlag.HasValue ?
                new ObjectParameter("ActiveFlag", activeFlag) :
                new ObjectParameter("ActiveFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchOrgEmpDetails_Result>("sp_SearchOrgEmpDetails", emp_FnameParameter, emp_LnameParameter, emp_CellPhoneParameter, emp_HomePhoneParameter, emp_BusinessPhoneParameter, emp_EmailIDParameter, activeFlagParameter);
        }
    
        public virtual ObjectResult<sp_SearchOrgEmpDetailsForAssignTemplate_Result> sp_SearchOrgEmpDetailsForAssignTemplate(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchOrgEmpDetailsForAssignTemplate_Result>("sp_SearchOrgEmpDetailsForAssignTemplate", searchTextParameter);
        }
    
        public virtual ObjectResult<sp_SearchProjects_Result> sp_SearchProjects(string searchFor)
        {
            var searchForParameter = searchFor != null ?
                new ObjectParameter("SearchFor", searchFor) :
                new ObjectParameter("SearchFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchProjects_Result>("sp_SearchProjects", searchForParameter);
        }
    
        public virtual ObjectResult<sp_SearchTimeSheetDetails_Result> sp_SearchTimeSheetDetails(Nullable<System.Guid> pK_TimeSheetID, Nullable<System.Guid> fK_Org_EmpID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var pK_TimeSheetIDParameter = pK_TimeSheetID.HasValue ?
                new ObjectParameter("PK_TimeSheetID", pK_TimeSheetID) :
                new ObjectParameter("PK_TimeSheetID", typeof(System.Guid));
    
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchTimeSheetDetails_Result>("sp_SearchTimeSheetDetails", pK_TimeSheetIDParameter, fK_Org_EmpIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> sp_UpdateTimeSheet(Nullable<System.Guid> pK_TimeSheetID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string tSFileName, string tSFilePath)
        {
            var pK_TimeSheetIDParameter = pK_TimeSheetID.HasValue ?
                new ObjectParameter("PK_TimeSheetID", pK_TimeSheetID) :
                new ObjectParameter("PK_TimeSheetID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var tSFileNameParameter = tSFileName != null ?
                new ObjectParameter("TSFileName", tSFileName) :
                new ObjectParameter("TSFileName", typeof(string));
    
            var tSFilePathParameter = tSFilePath != null ?
                new ObjectParameter("TSFilePath", tSFilePath) :
                new ObjectParameter("TSFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_UpdateTimeSheet", pK_TimeSheetIDParameter, startDateParameter, endDateParameter, tSFileNameParameter, tSFilePathParameter);
        }
    
        public virtual ObjectResult<USP_GetInvoiceDetails_Result> USP_GetInvoiceDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetInvoiceDetails_Result>("USP_GetInvoiceDetails");
        }
    
        public virtual ObjectResult<USP_GetInvoicesToEmail_Result> USP_GetInvoicesToEmail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetInvoicesToEmail_Result>("USP_GetInvoicesToEmail");
        }
    
        public virtual ObjectResult<USP_GetMonthlyInvoiceDetails_Result> USP_GetMonthlyInvoiceDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetMonthlyInvoiceDetails_Result>("USP_GetMonthlyInvoiceDetails");
        }
    
        public virtual ObjectResult<USP_GetTimeSheetDetails_Result> USP_GetTimeSheetDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetTimeSheetDetails_Result>("USP_GetTimeSheetDetails");
        }
    
        public virtual ObjectResult<string> USP_TestInvoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_TestInvoice");
        }
    
        public virtual int USP_UpdateInvoiceSentToQB(Nullable<System.Guid> fK_Org_EmpID, Nullable<System.Guid> fK_CustID, string invoiceNumber, string billingPeriod)
        {
            var fK_Org_EmpIDParameter = fK_Org_EmpID.HasValue ?
                new ObjectParameter("FK_Org_EmpID", fK_Org_EmpID) :
                new ObjectParameter("FK_Org_EmpID", typeof(System.Guid));
    
            var fK_CustIDParameter = fK_CustID.HasValue ?
                new ObjectParameter("FK_CustID", fK_CustID) :
                new ObjectParameter("FK_CustID", typeof(System.Guid));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateInvoiceSentToQB", fK_Org_EmpIDParameter, fK_CustIDParameter, invoiceNumberParameter, billingPeriodParameter);
        }
    
        public virtual int USP_UpdateInvoicesToEmail(Nullable<System.Guid> pk_EmpInvoiceHistory_ID)
        {
            var pk_EmpInvoiceHistory_IDParameter = pk_EmpInvoiceHistory_ID.HasValue ?
                new ObjectParameter("Pk_EmpInvoiceHistory_ID", pk_EmpInvoiceHistory_ID) :
                new ObjectParameter("Pk_EmpInvoiceHistory_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateInvoicesToEmail", pk_EmpInvoiceHistory_IDParameter);
        }
    
        public virtual int USP_UpdateTimeSheetSentToQB(Nullable<System.Guid> pK_TimeSheetID, Nullable<int> status)
        {
            var pK_TimeSheetIDParameter = pK_TimeSheetID.HasValue ?
                new ObjectParameter("PK_TimeSheetID", pK_TimeSheetID) :
                new ObjectParameter("PK_TimeSheetID", typeof(System.Guid));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateTimeSheetSentToQB", pK_TimeSheetIDParameter, statusParameter);
        }
    }
}
